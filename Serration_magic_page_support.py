#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 4.26
#  in conjunction with Tcl version 8.6
#    Feb 13, 2020 01:32:31 PM PST  platform: Windows NT

import sys
import os
from serration_magic import *
from tkinter import filedialog


try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True


def set_Tk_var():
    global post_directory
    post_directory = tk.StringVar()
    global part_number
    part_number = tk.StringVar()
    global program_number
    program_number = tk.StringVar()
    global work_offset
    work_offset = tk.StringVar()
    global tool_number
    tool_number = tk.StringVar()
    global x_center
    x_center = tk.StringVar()
    global y_center
    y_center = tk.StringVar()
    global z_top
    z_top = tk.StringVar()
    global b_angle
    b_angle = tk.StringVar()
    global od
    od = tk.StringVar()
    global id
    id = tk.StringVar()
    global pitch
    pitch = tk.StringVar()
    global depth
    depth = tk.StringVar()
    global feed_rate
    feed_rate = tk.StringVar()


def get_dir():
    post_directory.set(filedialog.askdirectory())
    sys.stdout.flush()


def magic():
    part_no = part_number.get()
    program = int(program_number.get())
    offset = int(work_offset.get())
    tool = int(tool_number.get())
    x = float(x_center.get())
    y = float(y_center.get())
    z = float(z_top.get())
    b = float(b_angle.get())
    deep = float(depth.get())
    clearance = .1
    outside_diam = float(od.get())
    inside_diam = float(id.get())
    p = float(pitch.get())
    f = float(feed_rate.get())
    direct = post_directory.get()
    Serrate(part_no, program, offset, tool, b, x, y, z, deep, clearance,
            outside_diam, inside_diam, p, f, direct).magic()

    sys.stdout.flush()


def resource_path(relative_path):
    """ Get absolute path to resource, works for dev and for PyInstaller """
    try:
        # PyInstaller creates a temp folder and stores path in _MEIPASS
        base_path = sys._MEIPASS
    except Exception:
        base_path = os.path.abspath(".")

    return os.path.join(base_path, relative_path)


def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import Serration_magic_page
    Serration_magic_page.vp_start_gui()




